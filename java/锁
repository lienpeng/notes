可以通过t.join()等待t线程结束后再继续运行：
t.interrupt()方法中断t线程，但是要注意，interrupt()方法仅仅向t线程发出了“中断请求”，至于t线程是否能立刻响应，要看具体代码

join()方法和sleep()方法收到请求都会立刻停止 抛出InterruptedException异常 可以在catch方法中处理事件
isInterrupted() 检查自身状态

或者通过设置标志位来结束线程（Thread类中定义变量并判断变量值，使用volatile修饰在线程间共享）

在Java虚拟机中，变量的值保存在主内存中，但是，当线程访问变量时，它会先获取一个副本，并保存在自己的工作内存中。如果线程修改了变量的值，虚拟机会在某个时刻把修改后的值回写到主内存，但是，这个时间是不确定的。

用synchronized修饰的方法就是同步方法，它表示整个方法都必须用this实例加锁。

对static方法添加synchronized，锁住的是该类的Class实例

由于Java的线程锁是可重入锁，所以，获取锁的时候，不但要判断是否是第一次获取，还要记录这是第几次获取。每获取一次锁，记录+1，每退出synchronized块，记录-1，减到0的时候，才会真正释放锁。