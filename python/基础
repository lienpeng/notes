链式赋值
a = b = 3

数据类型
数字 字符串 元组tuple 列表 集合 字典
布尔是整数类型的子类

bool(a) 转化为布尔类型
type(a)获取对象类型

二元运算符
/ 商 包含小数部分
** 幂
// 地板除 小于商的最大整数

列表之间的比较 > 逐一比较元素的大小

逻辑运算符 not and or
位运算符 ~取反 & | ^异或 >> 右移，符号位补位 <<左移 0补位

序列 list tuple bytes str
max()返回序列的最后一项
“python”*2

切片 a[0:4:2] 第三个参数为步长
a[::-1]反转序列

list 列表 [] 可变序列
list.append追加 insert(i, x)插入 remove(x)找到多个匹配的元素，只删除第一个

tuple 元组 () 不可变序列 定义的时候小括号可以省略
拆包 s_id, s_name=(102,'张三')

set 集合 {}无序
add remove clear

dict 字典 {}
items() keys() valus()
遍历
score = {"haha":12,"hehe":13}
for s_name, s_id in score.items():
    print(s_name, s_id)


map遍历
for key in map:
    map[key]

数组最后一个元素
list[-1]

原字符输出
print(r'hello \n world')

字符串包含
if str1 in str2: 包含的话，True
if str1.find(str2)>=0: 包含的话，返回第一次出现的位置，没有的话为负数

时间戳转换
timeStamp = 1381419600
dateArray = datetime.datetime.fromtimestamp(timeStamp)
otherStyleTime = dateArray.strftime("%Y-%m-%d %H:%M:%S")

取整：
round(),可以指定包含几位小数，但是包含小数的时候会有4舍6进5看前一位奇偶的问题。

a = (1)定义的不是tuple，是1这个数！这是因为括号()既可以表示tuple，又可以表示数学公式中的小括号，这就产生了歧义，因此，Python规定，这种情况下，按小括号进行计算，计算结果自然是1。
所以，只有1个元素的tuple定义时必须加一个逗号,，来消除歧义：a = (1,)

filter(function,iterable),第一个参数是函数，第二个参数是容器类型数据，进行筛选
map(function,iterable) 数据转换

匿名函数 lambda函数
格式 lambda 参数列表:体  只能有一条执行语句

lambda a,b:(a+b)

类
class 类名[父类]
构造函数
def __init__(self, name, age):
    self.name = name
    self.age = age
self.name表示当前变量是实例变量

实例方法
def run(self):


